apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "labels.selector" . | nindent 18 }}
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: {{ include "name" . }}
        image: "{{ .Values.registry.domain }}/{{ .Values.server.image.name }}:{{ .Values.server.image.tag }}"
        imagePullPolicy: {{ .Values.server.image.pullPolicy }}
        {{- if .Values.server.args }}
        args:
        {{- range $key, $value := .Values.server.args }}
          - {{ $value }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.server.port }}
          name: web
          protocol: TCP
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /metrics
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 120
          httpGet:
            path: /metrics
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        securityContext:
          readOnlyRootFilesystem: true
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 250m
            memory: 250Mi
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
